%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Mon Nov 11 18:18:38 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGAGUUAGAUCUCAUAUCCUUCCGCAAAAUGGAAAUGAUAUGUAAUCUAGCUUACAG\
) def
/coor [
[110.35348511 267.41226196]
[108.75908661 252.49723816]
[107.16468048 237.58221436]
[105.57028198 222.66719055]
[103.97587585 207.75216675]
[102.38147736 192.83715820]
[100.78707123 177.92213440]
[99.19267273 163.00711060]
[97.59826660 148.09208679]
[96.00386810 133.17706299]
[94.40946198 118.26203918]
[83.19902802 109.08204651]
[81.65888214 94.67461395]
[90.67551422 83.33235931]
[89.08110809 68.41733551]
[87.48670959 53.50231552]
[85.89230347 38.58729553]
[84.29790497 23.67227173]
[82.70349884 8.75725079]
[71.49148560 -5.59958839]
[78.71520996 -21.39212036]
[76.32925415 -36.20114517]
[73.94330597 -51.01016998]
[71.55735016 -65.81919861]
[69.17139435 -80.62821960]
[57.06163025 -91.15119934]
[57.88243866 -107.17324066]
[71.00417328 -116.40361023]
[86.36096191 -111.76155090]
[92.17238617 -96.80805969]
[83.98042297 -83.01417542]
[86.36637878 -68.20514679]
[88.75232697 -53.39612198]
[91.13828278 -38.58709717]
[93.52423096 -23.77807236]
[103.30412292 -16.22411919]
[105.20587921 -3.60258007]
[97.61852264 7.16284800]
[99.21292877 22.07786942]
[100.80732727 36.99289322]
[102.40173340 51.90791321]
[103.99613190 66.82293701]
[105.59053802 81.73796082]
[116.80097198 90.91795349]
[118.34111786 105.32538605]
[109.32448578 116.66764069]
[110.91889191 131.58265686]
[112.51329041 146.49768066]
[114.10769653 161.41270447]
[115.70209503 176.32772827]
[117.29650116 191.24275208]
[118.89089966 206.15777588]
[120.48530579 221.07279968]
[122.07970428 235.98780823]
[123.67411041 250.90283203]
[125.26850891 265.81787109]
[132.96418762 280.92456055]
[120.57823181 292.50146484]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[10 47]
[11 46]
[14 43]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
